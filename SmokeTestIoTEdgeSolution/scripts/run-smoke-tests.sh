#!/bin/bash

set -euxo pipefail

if [ "$#" -ne 3 ]
then
	echo "Script requires 3 parameters: testRuntimeInSeconds, logWindowInSeconds, errorsToGrep"
	exit 1
fi

testRuntimeInSeconds=$1
logWindowInSeconds=$2
errorsToGrep=$3

echo "Build IoT Edge solution..."
sudo iotedgedev build

echo "Start IoT Edge solution in simulator..."
sudo -E iotedgedev start --setup --file ./config/deployment.amd64.json

echo "Run simulator for ${testRuntimeInSeconds}s..."
sleep $testRuntimeInSeconds

echo "Check logs of last ${logWindowInSeconds}s..."

thisContainerId=$(sudo docker ps -f "name=IoTEdgeDevContainer" -q)

containerIds=$(sudo docker ps -q)

for containerId in $containerIds
do
	echo "grep $errorsToGrep in logs of $containerId..."

	errors=$(sudo docker logs --since ${logWindowInSeconds}s $containerId 2>&1 | grep $errorsToGrep || true)

	if [ -z "$errors" ]
	then
		echo "OK - Found no errors"
	else
		if [ $containerId == $thisContainerId ]
		then
			echo "Ignoring the logs generated by the container executing these tests"
		else
			echo "FAILED - Found errors in logs!"
			echo $errors
			exit 1
		fi
	fi
done